schema {
  query: Query
}

scalar Time
scalar Long

# Query defines all API queries
type Query {
  repo(
    owner: String!,
    name: String!,
    host: RepositoryHost = GITHUB,
  ): RepositoryAnalytics

  repos(
    owner: String!,
    host: RepositoryHost = GITHUB,
  ): [Repository!]
}

# Repositories

type Repository {
  id: Int!
  owner: String!
  name: String!
  description: String!
}

type RepositoryAnalytics {
  repository: Repository!

  burndown(
    type: BurndownType = GLOBAL,
  ): Burndown
}

enum RepositoryHost {
  GITHUB
  GITLAB
  BITBUCKET
}

# Burndowns

enum BurndownType {
  GLOBAL
  FILE
  AUTHOR
}

type GlobalBurndown {
  entries: [BurndownEntry!]
}

type AuthorBurndown {
  author(
    author: String!,
  ): [BurndownEntry!]
}

type FileBurndown {
  file(
    filename: String!,
  ): [BurndownEntry!]
}

type BurndownAlert {
  alert: String!
}

union Burndown = GlobalBurndown | AuthorBurndown | FileBurndown | BurndownAlert

type BurndownEntry {
  start: Time!

  # TODO: add Long type? tbh not sure if int64 is really justified at all here
  # https://gqlgen.com/reference/scalars/#custom-scalars-for-types-you-don-t-control
  bands: [Int!]!
}
